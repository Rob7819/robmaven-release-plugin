<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>rob.maventest</groupId>
    <artifactId>rjb-maven-release</artifactId>
    <version>1.2-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>11</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <junit.version>5.3.2</junit.version>
        <project.scm.id>github</project.scm.id>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <scm>
        <developerConnection>scm:git:https://github.com/Rob7819/robmaven-release-plugin.git</developerConnection>
        <url>https://github.com/Rob7819/robmaven-release-plugin</url>
      <tag>rjb-maven-release-1.1</tag>
    </scm>

    <repositories>
        <!--The nexus repositories can be replaced by using a mirror to a group which contains
        both nexus repositories.  The mirror has already been specified in settings.xml and
        a profile is being used to manage nexus dependencies.  We need to be careful and make
        sure the mirror is always up (depending on profile/repository settings), otherwise
        we'll need to use mirrorOf exceptions to avoid problems with dependencies while nexus is
        not in use.  This simply demonstrates there is another way to use repositories which may
        be beneficial depending on the scope and size of project(s)...-->

    </repositories>

    <build>
        <extensions>
            <extension>
                <groupId>io.packagecloud.maven.wagon</groupId>
                <artifactId>maven-packagecloud-wagon</artifactId>
                <version>0.0.6</version>
            </extension>
        </extensions>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.0</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.5.3</version>
            </plugin>
        </plugins>
    </build>

    <distributionManagement>
        <!-- This section is only needed if only one service is being used.  Otherwise
         it is best to use profiles to define multiple services-->
    </distributionManagement>

    <profiles>
        <!-- Build extensions are not supported by profiles -->
        <profile>
            <id>packagecloud</id>
            <distributionManagement>
                <!-- This solves the problem of leaving this section mixed with nexus settings
                 above in a separate distributionManagement section-->
                <repository>
                    <id>packagecloud.release</id>
                    <url>packagecloud+https://packagecloud.io/rjbmaventest/release</url>
                </repository>
                <snapshotRepository>
                    <id>packagecloud.snapshot</id>
                    <url>packagecloud+https://packagecloud.io/rjbmaventest/snapshot</url>
                </snapshotRepository>
            </distributionManagement>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>

        <profile>
            <id>nexus_distro</id>
            <distributionManagement>
                <!-- This solves the problem of leaving this section mixed with packagecloud settings
                 above in a separate distributionManagement section-->
                <snapshotRepository>
                    <id>nexus-snapshot</id>
                    <url>http://localhost:8081/repository/nexus-snapshot/</url>
                </snapshotRepository>
                <repository>
                    <id>nexus-release</id>
                    <url>http://localhost:8081/repository/nexus-release/</url>
                </repository>
            </distributionManagement>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
        </profile>

        <profile>
            <!-- Taken from main section(s) of pom to accommodate CircleCI builds -->
            <id>oracle_jdbc</id>
            <dependencies>
                <dependency>
                    <groupId>com.oracle.jdbc</groupId>
                    <artifactId>ojdbc8</artifactId>
                    <version>18.3.0.0</version>
                </dependency>
            </dependencies>
            <repositories>
                <repository>
                    <id>maven.oracle.com</id>
                    <name>oracle-maven-repo</name>
                    <url>https://maven.oracle.com</url>
                    <layout>default</layout>
                    <releases>
                        <enabled>true</enabled>
                        <updatePolicy>always</updatePolicy>
                    </releases>
                </repository>
            </repositories>
            <pluginRepositories>
                <pluginRepository>
                    <id>maven.oracle.com</id>
                    <name>oracle-maven-repo</name>
                    <url>https://maven.oracle.com</url>
                    <layout>default</layout>
                    <releases>
                        <enabled>true</enabled>
                        <updatePolicy>always</updatePolicy>
                    </releases>
                </pluginRepository>
            </pluginRepositories>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
        </profile>
    </profiles>

</project>